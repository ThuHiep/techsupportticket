{
    "sourceFile": "app/Http/Controllers/admin/DepartmentController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736264720331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736264720331,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse App\\Models\\Department;\nuse App\\Models\\Employee;\nuse Illuminate\\Pagination\\LengthAwarePaginator;\nuse App\\Http\\Controllers\\admin\\RequestController;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass DepartmentController extends Controller\n{\n    // Hiển thị danh sách phòng ban\n    public function index(Request $request)\n    {\n        // Xác thực dữ liệu nhập vào (bỏ 'status' vì không cần tìm kiếm theo trạng thái)\n        $request->validate([\n            'search' => 'nullable|string|max:255',\n            // 'status' => 'nullable|in:active,inactive', // Bỏ nếu không cần\n        ]);\n        $logged_user = Employee::with('user')->where('user_id', '=', Auth::user()->user_id)->first();\n        $template = 'admin.department.index';\n        $search = trim($request->input('search'));\n        // $statusFilter = $request->input('status'); // Bỏ nếu không cần\n\n        // Kiểm tra xem người dùng có thực hiện tìm kiếm hay không và ô tìm kiếm không trống\n        $searchPerformed = $request->filled('search');\n\n        if ($searchPerformed) {\n            // Xây dựng truy vấn tìm kiếm với 'LIKE %search%' trên cả 'department_name' và 'department_id'\n            $query = Department::query();\n\n            if ($search !== '') {\n                $query->where(function ($q) use ($search) {\n                    $q->where('department_name', 'LIKE', \"%{$search}%\");\n                });\n            }\n\n            // Bỏ bộ lọc trạng thái nếu không cần\n            // if ($statusFilter) {\n            //     $query->where('status', $statusFilter);\n            // }\n\n            // Phân trang với 4 mục mỗi trang\n            $departments = $query->paginate(5)->appends($request->all());\n\n            // Lấy tổng số kết quả\n            $count = $departments->total();\n        } else {\n            // Không có tìm kiếm nào được thực hiện hoặc ô tìm kiếm trống, hiển thị tất cả phòng ban\n            $departments = Department::paginate(5)->appends($request->all());\n\n            // Lấy tổng số kết quả\n            $count = $departments->total();\n        }\n\n        // Định nghĩa các trạng thái có sẵn (nếu vẫn cần hiển thị)\n        // $statuses = ['active', 'inactive'];\n\n        $data = RequestController::getUnreadRequests();\n\n        // Lấy danh sách request và số lượng request chưa đọc\n        $unreadRequests = $data['unreadRequests'];\n        $unreadRequestCount = $data['unreadRequestCount'];\n\n        return view('admin.dashboard.layout', compact(\n            'template',\n            'logged_user',\n            'departments', /* 'statuses', */\n            'searchPerformed',\n            'search',\n            'count',\n            'unreadRequests',\n            'unreadRequestCount'\n        ));\n    }\n\n    // Hiển thị form tạo phòng ban\n    public function create()\n    {\n        $template = 'admin.department.create';\n        $logged_user = Employee::with('user')->where('user_id', '=', Auth::user()->user_id)->first();\n        // Lặp đến khi tìm được mã không trùng lặp\n        $nextId = (string) Str::uuid();\n\n        $data = RequestController::getUnreadRequests();\n\n        // Lấy danh sách request và số lượng request chưa đọc\n        $unreadRequests = $data['unreadRequests'];\n        $unreadRequestCount = $data['unreadRequestCount'];\n\n        // Trả về view với $template và $nextId\n        return view('admin.dashboard.layout', compact(\n            'template',\n            'logged_user',\n            'nextId',\n            'unreadRequests',\n            'unreadRequestCount'\n        ));\n    }\n\n\n    public function store(Request $request)\n    {\n        $request->validate([\n            'department_id' => 'required|unique:department,department_id',\n            'department_name' => 'required|unique:department,department_name|max:255',\n            'status' => 'required|in:active,inactive',\n        ]);\n\n        Department::create([\n            'department_id' => $request->input('department_id'),\n            'department_name' => $request->input('department_name'),\n            'status' => $request->input('status'),\n        ]);\n\n        // Flash message vào session\n        return redirect()->route('department.index')->with('success', 'Phòng ban đã được thêm thành công!');\n    }\n\n\n    // Chỉnh sửa phòng ban\n    public function edit($department_id)\n    {\n        $template = 'admin.department.edit';\n        $logged_user = Employee::with('user')->where('user_id', '=', Auth::user()->user_id)->first();\n        $department = Department::findOrFail($department_id);\n\n        $data = RequestController::getUnreadRequests();\n\n        // Lấy danh sách request và số lượng request chưa đọc\n        $unreadRequests = $data['unreadRequests'];\n        $unreadRequestCount = $data['unreadRequestCount'];\n\n        return view('admin.dashboard.layout', compact(\n            'template',\n            'logged_user',\n            'department',\n            'unreadRequests',\n            'unreadRequestCount'\n        ));\n    }\n\n    // Cập nhật phòng ban\n    public function update(Request $request, $department_id)\n    {\n        $department = Department::findOrFail($department_id);\n\n        $request->validate([\n            'department_name' => 'required|unique:department,department_name,' . $department->department_id . ',department_id|max:255',\n            'status' => 'required|in:active,inactive',\n        ]);\n\n        $department->update([\n            'department_name' => $request->input('department_name'),\n            'status' => $request->input('status'),\n        ]);\n\n        return redirect()->route('department.index')\n            ->with('success', 'Thông tin phòng ban đã được cập nhật!');\n    }\n\n    // Xóa phòng ban\n    public function destroy($department_id)\n    {\n        $department = Department::findOrFail($department_id);\n        $department->delete();\n\n        return redirect()->route('department.index')\n            ->with('success', 'Phòng ban đã được xóa!');\n    }\n}\n"
        }
    ]
}