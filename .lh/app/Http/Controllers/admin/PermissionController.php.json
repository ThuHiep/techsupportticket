{
    "sourceFile": "app/Http/Controllers/admin/PermissionController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736145934808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736145934808,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Employee;\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Mail;\nuse App\\Mail\\EmployeeCreatedMail;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass PermissionController extends Controller\n{\n    public function index(Request $request)\n    {\n        $template = 'admin.permission.index';\n        $logged_user = Employee::with('user')->where('user_id', '=', Auth::user()->user_id)->first();\n        $search = $request->input('search');\n\n        $query = Employee::join('user', 'user.user_id', '=', 'employee.user_id')\n            ->join('role', 'role.role_id', '=', 'user.role_id')\n            ->where('status', 'active');\n\n        $query = Employee::join('user', 'user.user_id', '=', 'employee.user_id')\n            ->join('role', 'role.role_id', '=', 'user.role_id')\n            ->where('status', 'active');\n\n        if ($search) {\n            // Tìm theo tên\n            $query->where('full_name', 'LIKE', \"%$search%\");\n        }\n\n        $count = $query->count();\n        $resultMessage = '';\n\n        $count = $query->count();\n        $resultMessage = '';\n\n        if ($count > 0) {\n            $resultMessage = \"Tìm thấy {$count} người dùng có tên chứa từ khóa: {$search}\";\n        } else {\n            $resultMessage = \"Không tìm thấy người dùng có tên chứa từ khóa: {$search}\";\n        }\n\n        $employees = $query->select('employee.*', 'user.*', 'role.description')\n            ->orderBy('employee.employee_id')\n            ->paginate(3)->appends($request->all());\n\n        $data = RequestController::getUnreadRequests();\n\n        // Lấy danh sách request và số lượng request chưa đọc\n        $unreadRequests = $data['unreadRequests'];\n        $unreadRequestCount = $data['unreadRequestCount'];\n\n        return view('admin.dashboard.layout', compact(\n            'template',\n            'logged_user',\n            'employees',\n            'search',\n            'count',\n            'resultMessage',\n            'unreadRequests',\n            'unreadRequestCount'\n        ));\n    }\n\n\n\n\n\n    public function create()\n    {\n        $template = 'admin.permission.create';\n        $logged_user = Employee::with('user')->where('user_id', '=', Auth::user()->user_id)->first();\n\n        $data = RequestController::getUnreadRequests();\n\n        // Lấy danh sách request và số lượng request chưa đọc\n        $unreadRequests = $data['unreadRequests'];\n        $unreadRequestCount = $data['unreadRequestCount'];\n\n        return view('admin.dashboard.layout', compact(\n            'template',\n            'logged_user',\n            'unreadRequests',\n            'unreadRequestCount'\n        ));\n    }\n\n    public function save(Request $request)\n    {\n        $request->validate([\n            'full_name' => ['required', 'string', 'max:255'],\n            'email' => ['required', 'email', 'unique:employee,email', 'unique:customer,email'],\n            'date_of_birth' => ['required', 'date', 'before_or_equal:' . now()->subYears(18)->format('Y-m-d')],\n            'phone' => ['required', 'digits_between:9,11'],\n            'address' => ['required', 'string', 'max:255'],\n            'profile_image' => ['nullable', 'file', 'mimes:jpeg,png,jpg,gif'],\n        ], [\n            'full_name.max' => 'Tên nhân viên không được vượt quá 225 kí tự',\n            'email.unique' => 'Email đã tồn tại',\n            'date_of_birth.before_or_equal' => 'Ngày sinh phải đủ 18 tuổi',\n            'phone.digits_between' => 'Số điện thoại phải có độ dài từ 9 đến 11 số',\n            'address.max' => 'Địa chỉ không được vượt quá 225 kí tự',\n            'profile_image.mimes' => 'Ảnh đại diện phải có định dạng jpeg, png, jpg, hoặc gif',\n        ]);\n\n        // Sinh user_id ngẫu nhiên\n        $randomUserId = (string) Str::uuid();\n\n        $role = $request->input('role_id');\n\n        if ($role == 1) {\n            $randomUserName = 'admin' . str_pad(mt_rand(1, 99999999), 8, '0', STR_PAD_LEFT);\n            while (User::where('username', $randomUserName)->exists()) {\n                $randomUserName = 'admin' . str_pad(mt_rand(1, 99999999), 8, '0', STR_PAD_LEFT);\n            }\n        } else if ($role == 2) {\n            $randomUserName = 'support' . str_pad(mt_rand(1, 99999999), 8, '0', STR_PAD_LEFT);\n            while (User::where('username', $randomUserName)->exists()) {\n                $randomUserName = 'support' . str_pad(mt_rand(1, 99999999), 8, '0', STR_PAD_LEFT);\n            }\n        }\n\n        $profileImagePath = null;\n        if ($request->hasFile('profile_image')) {\n            $image = $request->file('profile_image');\n            if ($image->isValid()) {\n                $imageName = 'profile_' . time() . '.' . $image->getClientOriginalExtension();\n                $profileImagePath = $imageName;\n                $image->move(public_path('admin/img/employee'), $imageName);\n            }\n        }\n\n        // Sinh password ngẫu nhiên với 20 ký tự bao gồm ký tự đặc biệt\n        $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_+-=[]{}|;:,.<>?';\n        $password = '';\n        for ($i = 0; $i < 20; $i++) {\n            $password .= $characters[mt_rand(0, strlen($characters) - 1)];\n        }\n\n        // Tạo user mới\n        $user = new User();\n        $user->user_id = $randomUserId;\n        $user->username = $randomUserName;\n        $user->password = Hash::make($password);\n        $user->role_id = $request->input('role_id');\n        $user->status = \"active\";\n        $user->create_at = now();\n        $user->update_at = now();\n        $user->save();\n\n        // Tạo nhân viên mới\n        $employee = new Employee();\n        $employee->employee_id = (string) Str::uuid();\n        $employee->user_id = $randomUserId;\n        $employee->full_name = preg_replace('/\\s+/', ' ', trim($request->input('full_name')));\n        $employee->email = $request->input('email');\n        $employee->date_of_birth = $request->input('date_of_birth');\n        $employee->gender = $request->input('gender');\n        $employee->phone = $request->input('phone');\n        $employee->address = preg_replace('/\\s+/', ' ', trim($request->input('address')));\n        $employee->profile_image = $profileImagePath;\n        $employee->create_at = now();\n        $employee->update_at = now();\n        $employee->save();\n\n        // Gửi email thông báo\n        Mail::to($employee->email)->send(new EmployeeCreatedMail($employee, $user->user_id, $user->username, $password));\n\n        return redirect()->route('permission.index')\n            ->with('success', \"Người dùng đã được thêm thành công và email đã được gửi!\");\n    }\n\n\n    public function editPermission($employee_id)\n    {\n        $template = 'admin.permission.edit';\n        $logged_user = Employee::with('user')->where('user_id', '=', Auth::user()->user_id)->first();\n        $employee = Employee::with(['user.role'])\n            ->where('employee_id', '=', $employee_id)\n            ->first();\n\n        $data = RequestController::getUnreadRequests();\n\n        // Lấy danh sách request và số lượng request chưa đọc\n        $unreadRequests = $data['unreadRequests'];\n        $unreadRequestCount = $data['unreadRequestCount'];\n\n        return view('admin.dashboard.layout', compact(\n            'template',\n            'logged_user',\n            'employee',\n            'unreadRequests',\n            'unreadRequestCount'\n        ));\n    }\n\n    // Cập nhật thông tin nhân viên\n    public function updatePermission(Request $request, $employee_id)\n    {\n        $employee = Employee::findOrFail($employee_id);\n        $user = User::findOrFail($employee->user_id);\n\n        // Kiểm tra nếu có hình ảnh được upload\n        $profileImagePath = $employee->profile_image;\n        if ($request->hasFile('profile_image')) {\n            // Xóa ảnh cũ nếu có\n            if ($profileImagePath && file_exists(public_path('admin/img/employee/' . $profileImagePath))) {\n                unlink(public_path('admin/img/employee/' . $profileImagePath));\n            }\n\n            // Lưu ảnh mới\n            $image = $request->file('profile_image');\n            if ($image->isValid()) {\n                $imageName = 'update_' . time() . '.' . $image->getClientOriginalExtension();\n                $profileImagePath = $imageName;  // Cập nhật đường dẫn ảnh mới\n                $image->move(public_path('admin/img/employee/'), $imageName);  // Di chuyển ảnh mới vào thư mục\n            }\n        }\n\n        // Cập nhật thông tin nhân viên\n        $employee->full_name = $request->input('full_name');\n        $employee->date_of_birth = $request->input('date_of_birth');\n        $employee->gender = $request->input('gender');\n        $employee->phone = $request->input('phone');\n        $employee->address = $request->input('address');\n        $employee->profile_image = $profileImagePath;\n        $employee->email = $request->input('email');\n        $employee->update_at = now();\n\n        $user->username = $request->input('username');\n        $user->role_id = $request->input('role_id');\n        $user->status = $request->input('status');\n        $user->update_at = now();\n        // Lưu thông tin nhân viên vào database\n        $employee->save();\n        $user->save();\n\n        return redirect()->route('permission.index')\n            ->with('success', 'Thông tin tài khoản đã được cập nhật!');\n    }\n\n    public function deletePermission($id)\n    {\n        // Xóa Employee và User liên quan\n        Employee::where('user_id', $id)->delete();\n        User::where('user_id', $id)->delete();\n\n        return redirect()->route('permission.index')->with('success', 'Tài khoản đã được xóa thành công.');\n    }\n}\n"
        }
    ]
}